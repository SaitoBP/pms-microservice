openapi: '3.0.2'

info:
  title: Customers API
  version: '1.0'
  description: API responsible for handling all customers related information

servers:
  - url: http://localhost:5001/api/customers

tags:
  - name: Customers

paths:
  /:
    post:
      tags:
        - Customers
      summary: Create new customer
      operationId: createCustomer
      requestBody:
        $ref: '#/components/requestBodies/Customer'
      responses:
        201:
          $ref: '#/components/responses/CommonCreated'
        400:
          $ref: '#/components/responses/CommonBadRequest'

    get:
      tags:
        - Customers
      summary: List all customers
      operationId: listCustomers
      responses:
        200:
          $ref: '#/components/responses/Customers'
    
  /{customerId}/:
    get:
      tags:
        - Customers
      summary: Get customer by id
      operationId: getCustomerById
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        200:
          $ref: '#/components/responses/Customer'
        404:
          $ref: '#/components/responses/CommonNotFound'

    put:
      tags:
        - Customers
      summary: Update customer by id
      operationId: updateCustomerById
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      requestBody:
        $ref: '#/components/requestBodies/Customer'
      responses:
        200:
          $ref: '#/components/responses/CommonOk'
        400:
          $ref: '#/components/responses/CommonBadRequest'
        404:
          $ref: '#/components/responses/CommonNotFound'

    delete:
      tags:
        - Customers
      summary: Delete customer by id
      operationId: deleteCustomerById
      parameters:
        - $ref: '#/components/parameters/CustomerId'
      responses:
        200:
          $ref: '#/components/responses/CommonOk'
        404:
          $ref: '#/components/responses/CommonNotFound'

components:
  parameters:
    CustomerId:
      name: customerId
      in: path
      required: true
      schema:
        type: string
        format: uuid

  requestBodies:
    Customer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'

  responses:
    CommonOk:
      description: Ok

    CommonCreated:
      description: Created
    
    CommonBadRequest:
      description: Bad request

    CommonNotFound:
      description: Not found

    Customer:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'

    Customers:
      description: Ok
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Customer'

  schemas:
    Customer:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        phone:
          type: string
        address:
          type: string